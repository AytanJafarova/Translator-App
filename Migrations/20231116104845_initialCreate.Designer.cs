// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TranslatorApp.DataAccessLayer.TranslatorDbContext;

#nullable disable

namespace TranslatorApp.Migrations
{
    [DbContext(typeof(TranslateDbContext))]
    [Migration("20231116104845_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TranslatorApp.Entities.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WordId"));

                    b.Property<string>("Azerbaycanca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ozbekce")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Qazaxca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Qirgizca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tatarca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Turkce")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Turkmence")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uygurca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("WordId");

                    b.HasIndex("Azerbaycanca")
                        .IsUnique();

                    b.ToTable("Words");
                });
#pragma warning restore 612, 618
        }
    }
}
